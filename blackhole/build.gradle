buildscript {
  ext {
    kotlinVersion = '1.3.50'
  }

  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

  }
}

//________________________________________________________________________________
// DEPENDENCY VERSIONS
//________________________________________________________________________________
ext {
  kotlinCoroutinesVersion = '1.3.2'
  vertxVersion = '3.9.0'
  junitJupiterEngineVersion = '5.4.0'
  koinVersion = '2.1.5'
  jacksonVersion = '2.10.3'
}

plugins {
  id "org.jetbrains.kotlin.jvm" version '1.3.50'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '5.0.0'
}
apply plugin: 'kotlin'
apply plugin: 'project-report'

group = 'com.lfmunoz'
version = '1.0.0-SNAPSHOT'

repositories {
  mavenCentral()
  jcenter()
}



application {
  mainClassName = 'io.vertx.core.Launcher'
}


def mainVerticleName = 'com.lfmunoz.flink.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'


configurations.all {
  resolutionStrategy {
    force "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
  }
}


dependencies {
  // KOIN
  implementation "org.koin:koin-core:$koinVersion"
  implementation "org.koin:koin-logger-slf4j:$koinVersion"
  testImplementation "org.koin:koin-test:$koinVersion"
  // LOGGING
  implementation("org.fissore:slf4j-fluent:0.12.0")
  implementation "ch.qos.logback:logback-classic:1.2.3"
  implementation "ch.qos.logback:logback-core:1.2.3"
  implementation "org.codehaus.janino:janino:3.0.8"
// JSON
  implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.10.3'
//  implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
  implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "$jacksonVersion"
  implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: "$jacksonVersion"
  // KOTLIN SCRIPT
  compile "org.jetbrains.kotlin:kotlin-script-runtime:$kotlinVersion"
  compile("org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion")
  compile "org.jetbrains.kotlin:kotlin-script-util:$kotlinVersion"
  runtime("org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion")
  testRuntime("org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion")
  // KOTLIN
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: "$kotlinVersion"
  implementation ("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion")
  // VERTX
  implementation "io.vertx:vertx-web-client:$vertxVersion"
  implementation "io.vertx:vertx-junit5:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation ("io.vertx:vertx-lang-kotlin:$vertxVersion") {
    exclude group: "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  }
  implementation ("io.vertx:vertx-lang-kotlin-coroutines:$vertxVersion") {
    exclude group: "org.jetbrains.kotlinx:kotlinx-coroutines-core"
    exclude group: "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  }
  // TEST
  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"

}

compileKotlin {
  kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '1.8'
}


shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
